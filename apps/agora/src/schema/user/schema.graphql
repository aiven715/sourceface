directive @authenticated on FIELD_DEFINITION
directive @notAuthenticated on FIELD_DEFINITION
directive @noUsers on FIELD_DEFINITION
directive @privileged on FIELD_DEFINITION

type User {
  id: Int!
  createdAt: DateTime!
  email: String!
  username: String!
  role: Role!
}

type Role {
  id: Int!
  name: String!
  isPrivileged: Boolean!
}

extend type Query {
  myself: User! @authenticated
  hasUsers: Boolean! @notAuthenticated
}

extend type Mutation {
  changePassword(oldPassword: String!, newPassword: String!): Boolean!
    @authenticated
  # changeUserPassword(email: String!, password: String!): Boolean!
  #   @authenticated
  #   @privileged
  # createRole(name: String!): String! @authenticated @privileged
  initialSignUp(username: String!, email: String!, password: String!): User!
    @notAuthenticated
    @noUsers
  # invitationSignUp(
  #   username: String!
  #   email: String!
  #   password: String!
  #   invitationId: String!
  # ): User! @notAuthenticated
  # invite(email: String!, role: String!): String! @authenticated @privileged
  signInLocal(username: String!, password: String!): User! @notAuthenticated
  # signInGoogle(code: String!): User! @notAuthenticated
  signOut: Boolean! @authenticated
}
