type References {
  pages: [PageReference!]
  operations: [OperationReference!]
  modules: [ModuleReference!]
}

type PageReference {
  field: String!
  one: Page
  many: [Page!]
}

type OperationReference {
  field: String!
  one: Command
  many: [Command!]
}

type ModuleReference {
  field: String!
  one: Module
  many: [Module!]
}

extend type Mutation {
  referActionPage(
    actionId: UUID!
    pageId: Int
    pageIds: [Int!]
    field: String
  ): Boolean!
  unreferActionPage(actionId: UUID!, field: String!): Boolean!
  referActionOperation(
    actionId: UUID!
    operationId: Int
    operationIds: [Int!]
    field: String
  ): Boolean!
  unreferActionOperation(actionId: UUID!, field: String!): Boolean!
  referActionModule(
    actionId: UUID!
    moduleId: UUID
    moduleIds: [UUID!]
    field: String!
  ): Boolean!
  unreferActionModule(actionId: UUID!, field: String!): Boolean!
}
