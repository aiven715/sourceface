directive @authenticated on FIELD_DEFINITION
directive @notAuthenticated on FIELD_DEFINITION
directive @noUsers on FIELD_DEFINITION

type User {
  id: Int!
  createdAt: DateTime!
  email: String!
  username: String!
  role: Role!
}

# TODO: Remove
type Invitation {
  id: String!
  createdAt: DateTime!
  expiresAt: DateTime!
  email: String!
  roleId: Int!
}

extend type Query {
  myself: User! @authenticated
  users(limit: Int, offset: Int): [User!]! @authenticated @privileged
  hasUsers: Boolean! @notAuthenticated
}

extend type Mutation {
  signInLocal(username: String!, password: String!): User! @notAuthenticated
  # signInGoogle(code: String!): User! @notAuthenticated
  initialSignUp(username: String!, email: String!, password: String!): User!
    @notAuthenticated
    @noUsers
  signOut: Boolean! @authenticated
  changePassword(oldPassword: String!, newPassword: String!): Boolean!
    @authenticated
  changeUserPassword(userId: Int!, password: String!): Boolean!
    @authenticated
    @privileged
  invite(roleId: Int!, email: String!): Invitation! @authenticated @privileged
  invitationSignUp(
    invitationId: String!
    username: String!
    email: String!
    password: String!
  ): User! @notAuthenticated
  removeUser(userId: Int!): Boolean! @authenticated @privileged
  assignRole(userId: Int!, roleId: Int!): Boolean! @authenticated @privileged
}
