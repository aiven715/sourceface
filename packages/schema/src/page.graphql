type Page {
  id: Int!
  createdAt: DateTime!
  route: String!
  title: String!
  layout: Layout!
  modules: [Module!]!
  # TODO: will not be a list of pages, since we need path of every item instead of route
  # parents or hierarchy or path: [Page!]!
}

# extend type Mutation {
#   createPage(title: String!): Page! @authenticated @privileged
# }

extend type Query {
  # TODO: path might be optional in case default page needs to be returned
  # TODO: have Path scalar type for validating path?
  page(path: String!): Page!
  #@authenticated
}

extend type Mutation {
  # TODO: make sure all layouts related to that page are removed as well
  removePage(pageId: Int!): Boolean
}
