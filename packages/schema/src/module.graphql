enum ModuleType {
  button
  container
  input
  table
  text
}

type Module {
  id: String!
  positionId: Int!
  createdAt: DateTime!
  type: ModuleType
  binds: JSONObject
  config: JSONObject!
  layouts: [Layout!]!
}

extend type Mutation {
  createModule(
    type: ModuleType!
    config: JSONObject!
    position: PositionInput!
  ): Module!
  # TODO: rename to pushConfig and mutation should return JSONObject instead? Have similar logic as
  # pushBinds since in future people might need to update nested fields in the config.
  updateModule(moduleId: Int!, key: String!, value: JSON!): Module!
  # TODO: make sure all related child layouts are removed as well
  removeModule(moduleId: Int!): Boolean
  pushBinds(moduleId: Int!, binds: JSONObject!): JSONObject!
}
