scalar Position

type Layout {
  id: Int!
  createdAt: DateTime!
  positions: [Position]
}

type Position {
  id: Int!
  x: Int!
  y: Int!
  w: Int!
  h: Int!
  content: PositionContent!
}

input type PositionInput {
  id: Int!
  x: Int!
  y: Int!
  w: Int!
  h: Int!
}

enum PositionType {
  module
}

union PositionContent = Module

export type Mutation {
  updateLayout(layoutId: Int!, positions: [PositionInput]!): Layout!
}
