# Consider removing Layout and Position entity completely, since it might be stored as JSON type for the
# page table and also inside of a config in case of modules nesting. Keeping such data in relational table
# doesn't make sence since we don't need make queries and joins with it.

# Alternatively have layouts table and keep position JSON as column in modules table

# Alternatively(and most likely) have layouts table and all their positions in "positions" column of the same
# table. When removing a module remove it's position in layout JSON. Match layouts with corresponding modules
# on the front-end. In case of data inconsistency on the front-end ignore missing module.

type Layout {
  id: Int!
  createdAt: DateTime!
  page: Page!
  positions: [Position!]!
}

type Position {
  id: Int!
  x: Int!
  y: Int!
  w: Int!
  h: Int!
}

input PositionInput {
  id: Int
  layoutId: Int!
  x: Int!
  y: Int!
  w: Int!
  h: Int!
}

extend type Mutation {
  updatePositions(positions: [PositionInput]!): [Position!]!
}
